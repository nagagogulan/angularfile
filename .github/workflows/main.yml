name: Build and Deploy Application with Docker

on:
  push:
    branches:
      - main # Run the workflow on pushes to the 'main' branch

jobs:
  build-and-deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          echo "Docker login successful."

      # Step 3: Build Docker Image
      - name: Build Docker Image
        env:
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
        run: |
          docker build -t $IMAGE_NAME:latest .
          echo "Docker image built: $IMAGE_NAME:latest"

      # Step 4: Push Docker Image to Docker Hub
      - name: Push Docker Image
        env:
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
        run: |
          docker push $IMAGE_NAME:latest
          echo "Docker image pushed to Docker Hub: $IMAGE_NAME:latest"

      # Step 5: Set up SSH for EC2 connection
      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        run: |
          echo "Setting up SSH..."
          
          # Configure SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          echo "SSH setup completed."

      # Step 6: Deploy Docker Image on EC2
      - name: Deploy Docker Image
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
        run: |
          echo "Deploying Docker container on EC2..."
          
          # SSH into EC2 and update Docker container
          ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST << EOF
            echo "Connected to EC2"
            docker pull $IMAGE_NAME:latest
            docker stop app-container || true
            docker rm app-container || true
            docker run -d --name app-container -p 80:80 $IMAGE_NAME:latest
            echo "Docker container deployed successfully."
          EOF
